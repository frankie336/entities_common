name: Lint, Test, Tag, and Publish

on:
  push:
    branches:
      - '**'  # Run on all branches

permissions:
  contents: write   # Needed for semantic-release to push tags/releases
  id-token: write   # Needed for PyPI trusted publishing

env:
  TEST_PYPI_URL: https://test.pypi.org/simple/
  PROD_PYPI_URL: https://upload.pypi.org/legacy/
  BASE_URL: http://localhost:9000/

jobs:
  lint:
    name: 🧹 Lint Code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-lint-${{ hashFiles('**/pyproject.toml') }}
      - run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install --extra-index-url ${{ env.TEST_PYPI_URL }} -e ".[dev]"
      - run: black --check .
      - run: isort --check .

  test:
    name: ✅ Test on Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml') }}
      - run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install --extra-index-url ${{ env.TEST_PYPI_URL }} -e ".[dev]"
      - run: pytest tests/

  release:
    name: 🚀 Tag, Build, and Publish
    runs-on: ubuntu-latest
    needs: test
    if: "github.ref_type == 'branch' && (github.ref_name == 'main' || github.ref_name == 'master' || github.ref_name == 'dev')"
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - run: |
          python -m pip install --upgrade pip setuptools wheel build
          pip install --extra-index-url ${{ env.TEST_PYPI_URL }} -e ".[dev]"
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - run: |
          npm install -g semantic-release \
            @semantic-release/git \
            @semantic-release/changelog \
            @semantic-release/github \
            @semantic-release/exec \
            conventional-changelog-conventionalcommits
      - name: 🔢 Run semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release
      - run: python -m build
      - run: |
          ls -lh dist
          test -n "$(ls -A dist 2>/dev/null)" || (echo "❌ dist/ is empty!" && exit 1)
      - name: 🧠 Decide publish target
        id: repo
        run: |
          BRANCH="${{ github.ref_name }}"
          if [[ "$BRANCH" == "main" || "$BRANCH" == "master" ]]; then
            echo "repo=${{ env.PROD_PYPI_URL }}" >> $GITHUB_OUTPUT
            echo "pypi_token_name=PROD_PYPI_TOKEN" >> $GITHUB_OUTPUT
          elif [[ "$BRANCH" == "dev" ]]; then
            echo "repo=${{ env.TEST_PYPI_URL }}" >> $GITHUB_OUTPUT
            echo "pypi_token_name=TEST_PYPI_TOKEN" >> $GITHUB_OUTPUT
          else
            echo "::error::Cannot determine publish target."
            exit 1
          fi
      - name: 📦 Publish to PyPI or TestPyPI
        if: steps.repo.outputs.repo != ''
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: "__token__"
          password: ${{ secrets[steps.repo.outputs.pypi_token_name] }}
          repository-url: ${{ steps.repo.outputs.repo }}
          skip-existing: true
